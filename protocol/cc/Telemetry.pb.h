/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.5 at Fri Feb  7 20:22:27 2020. */

#ifndef PB_TELEMETRY_PB_H_INCLUDED
#define PB_TELEMETRY_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _Provisioning_ReadDef_RegLength {
    Provisioning_ReadDef_RegLength_RL16 = 0,
    Provisioning_ReadDef_RegLength_RL8 = 1
} Provisioning_ReadDef_RegLength;
#define _Provisioning_ReadDef_RegLength_MIN Provisioning_ReadDef_RegLength_RL16
#define _Provisioning_ReadDef_RegLength_MAX Provisioning_ReadDef_RegLength_RL8
#define _Provisioning_ReadDef_RegLength_ARRAYSIZE ((Provisioning_ReadDef_RegLength)(Provisioning_ReadDef_RegLength_RL8+1))

typedef enum _Request_Action {
    Request_Action_REBOOT = 0,
    Request_Action_FORCE_READS = 1,
    Request_Action_REQUEST_REGISTRATION = 2
} Request_Action;
#define _Request_Action_MIN Request_Action_REBOOT
#define _Request_Action_MAX Request_Action_REQUEST_REGISTRATION
#define _Request_Action_ARRAYSIZE ((Request_Action)(Request_Action_REQUEST_REGISTRATION+1))

/* Struct definitions */
typedef struct _Provisioning {
    pb_callback_t busAddr;
    pb_callback_t name;
    pb_callback_t readDefinitions;
/* @@protoc_insertion_point(struct:Provisioning) */
} Provisioning;

typedef struct _Payload {
    uint32_t busId;
    uint32_t busAddr;
    uint32_t definitionId;
    pb_callback_t data;
/* @@protoc_insertion_point(struct:Payload) */
} Payload;

typedef struct _Provisioning_ReadDef {
    uint32_t definitionId;
    Provisioning_ReadDef_RegLength registerIdLength;
    uint32_t registerId;
    uint32_t registerBlockLength;
    uint32_t numBytesPerRegister;
    uint32_t readPeriod;
/* @@protoc_insertion_point(struct:Provisioning_ReadDef) */
} Provisioning_ReadDef;

typedef struct _Registration {
    uint32_t version;
    pb_callback_t uuid;
    pb_callback_t ipv4;
    pb_callback_t ipv6;
    pb_callback_t peripherals;
/* @@protoc_insertion_point(struct:Registration) */
} Registration;

typedef struct _Registration_Peripheral {
    uint32_t busId;
    uint32_t busAddr;
    pb_callback_t generalCallResp;
/* @@protoc_insertion_point(struct:Registration_Peripheral) */
} Registration_Peripheral;

typedef struct _Request {
    Request_Action action;
/* @@protoc_insertion_point(struct:Request) */
} Request;

typedef struct _Telemetry {
    pb_size_t which_message;
    union {
        Registration registration;
        Provisioning provisioning;
        Payload payload;
        Request request;
    } message;
/* @@protoc_insertion_point(struct:Telemetry) */
} Telemetry;

/* Default values for struct fields */

/* Initializer values for message structs */
#define Telemetry_init_default                   {0, {Registration_init_default}}
#define Registration_init_default                {0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define Registration_Peripheral_init_default     {0, 0, {{NULL}, NULL}}
#define Provisioning_init_default                {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define Provisioning_ReadDef_init_default        {0, _Provisioning_ReadDef_RegLength_MIN, 0, 0, 0, 0}
#define Payload_init_default                     {0, 0, 0, {{NULL}, NULL}}
#define Request_init_default                     {_Request_Action_MIN}
#define Telemetry_init_zero                      {0, {Registration_init_zero}}
#define Registration_init_zero                   {0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define Registration_Peripheral_init_zero        {0, 0, {{NULL}, NULL}}
#define Provisioning_init_zero                   {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define Provisioning_ReadDef_init_zero           {0, _Provisioning_ReadDef_RegLength_MIN, 0, 0, 0, 0}
#define Payload_init_zero                        {0, 0, 0, {{NULL}, NULL}}
#define Request_init_zero                        {_Request_Action_MIN}

/* Field tags (for use in manual encoding/decoding) */
#define Provisioning_busAddr_tag                 1
#define Provisioning_name_tag                    2
#define Provisioning_readDefinitions_tag         3
#define Payload_busId_tag                        1
#define Payload_busAddr_tag                      2
#define Payload_definitionId_tag                 3
#define Payload_data_tag                         4
#define Provisioning_ReadDef_definitionId_tag    1
#define Provisioning_ReadDef_registerIdLength_tag 2
#define Provisioning_ReadDef_registerId_tag      3
#define Provisioning_ReadDef_registerBlockLength_tag 4
#define Provisioning_ReadDef_numBytesPerRegister_tag 5
#define Provisioning_ReadDef_readPeriod_tag      6
#define Registration_version_tag                 1
#define Registration_uuid_tag                    2
#define Registration_ipv4_tag                    3
#define Registration_ipv6_tag                    4
#define Registration_peripherals_tag             5
#define Registration_Peripheral_busId_tag        1
#define Registration_Peripheral_busAddr_tag      2
#define Registration_Peripheral_generalCallResp_tag 3
#define Request_action_tag                       1
#define Telemetry_registration_tag               1
#define Telemetry_provisioning_tag               2
#define Telemetry_payload_tag                    3
#define Telemetry_request_tag                    4

/* Struct field encoding specification for nanopb */
extern const pb_field_t Telemetry_fields[5];
extern const pb_field_t Registration_fields[6];
extern const pb_field_t Registration_Peripheral_fields[4];
extern const pb_field_t Provisioning_fields[4];
extern const pb_field_t Provisioning_ReadDef_fields[7];
extern const pb_field_t Payload_fields[5];
extern const pb_field_t Request_fields[2];

/* Maximum encoded size of messages (where known) */
/* Telemetry_size depends on runtime parameters */
/* Registration_size depends on runtime parameters */
/* Registration_Peripheral_size depends on runtime parameters */
/* Provisioning_size depends on runtime parameters */
#define Provisioning_ReadDef_size                32
/* Payload_size depends on runtime parameters */
#define Request_size                             2

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define TELEMETRY_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
